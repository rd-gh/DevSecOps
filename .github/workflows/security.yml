name: .NET Security Pipeline

on:
  push:
    branches: [main]
    paths:
      - 'S1A/**'
  pull_request:
    branches: [main]
    paths:
      - 'S1A/**'

permissions:
  contents: read
  security-events: write

jobs:
  semgrep:
    name: Semgrep SAST (C#)
    runs-on: ubuntu-latest
    continue-on-error: false  # Fail job if semgrep exits non-zero
    steps:
      - uses: actions/checkout@v4

      - name: Run Semgrep (capture exit but don't fail yet)
        id: semgrep_scan
        continue-on-error: true
        uses: returntocorp/semgrep-action@v1
        with:
          entryPoint: semgrep
          args: >
            --config=https://semgrep.dev/p/csharp
            --config=https://semgrep.dev/p/owasp-top-ten
            --config=https://semgrep.dev/p/security-audit
            --sarif
            --output=semgrep-results.sarif
            --error

      - name: Upload SARIF to GitHub
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: semgrep-results.sarif

      - name: Fail if Semgrep found issues
        if: steps.semgrep_scan.outcome == 'failure'
        run: |
          echo "‚ùå Semgrep found security issues."
          exit 1

  snyk:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: S1A  # üîë change working directory

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore NuGet packages
        run: dotnet restore SecurityDemo.csproj

      - name: Install Snyk CLI
        run: npm install -g snyk

      - name: Run Snyk scan
        id: snyk_scan
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: |
          snyk test \
            --severity-threshold=high \
            --sarif-file-output=snyk.sarif
        continue-on-error: true

      - name: Upload SARIF to GitHub
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: S1A/snyk.sarif

      - name: Fail if vulnerabilities found
        run: exit 1
        if: steps.snyk_scan.outcome == 'failure'

  gitleaks:
    name: Secret Scan (Gitleaks)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: gitleaks/gitleaks-action@v2
        env:
          GITLEAKS_LICENSE_KEY: ${{ secrets.GITLEAKS_LICENSE_KEY }}

  dotnet-lint:
    name: Linting with dotnet-format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
      - run: dotnet tool install -g dotnet-format
      - run: dotnet-format S1A/SecurityDemo.csproj --check --verbosity diagnostic